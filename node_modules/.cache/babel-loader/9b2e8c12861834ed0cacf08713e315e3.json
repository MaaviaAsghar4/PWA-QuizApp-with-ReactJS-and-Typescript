{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/maaviasghar4/Desktop/React-Bootcamp/quizapplication/src/Components/Quix.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.css';\n\nconst Quiz = ({\n  question,\n  answer,\n  options,\n  handleStep\n}) => {\n  _s();\n\n  let [score, setScore] = useState(0);\n\n  let setActive = ans => {\n    if (answer === ans) {\n      setScore(++score);\n    }\n\n    handleStep(score);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" Q: \", question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: options.map((answer, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            value: answer,\n            onClick: () => setActive(answer),\n            className: \"option-list\",\n            children: answer\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quiz, \"nP7jqLDWWi0txPFWHO3HvL4u4pY=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/home/maaviasghar4/Desktop/React-Bootcamp/quizapplication/src/Components/Quix.tsx"],"names":["React","useState","Quiz","question","answer","options","handleStep","score","setScore","setActive","ans","map","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;;AAGA,MAAMC,IAA6B,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,MAAV;AAAiBC,EAAAA,OAAjB;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AAAA;;AAC5E,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,CAAD,CAA/B;;AACA,MAAIQ,SAAS,GAAIC,GAAD,IAAuB;AACnC,QAAIN,MAAM,KAAGM,GAAb,EAAkB;AACdF,MAAAA,QAAQ,CAAC,EAAED,KAAH,CAAR;AACH;;AACDD,IAAAA,UAAU,CAACC,KAAD,CAAV;AACH,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA,6BACI;AAAA,2BAASJ,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACI;AAAA,kBACKE,OAAO,CAACM,GAAR,CAAY,CAACP,MAAD,EAASQ,CAAT,KAAe;AACxB,8BACA;AAAY,YAAA,KAAK,EAAER,MAAnB;AAA2B,YAAA,OAAO,EAAE,MAAIK,SAAS,CAACL,MAAD,CAAjD;AAA2D,YAAA,SAAS,EAAC,aAArE;AAAA,sBAAoFA;AAApF,aAASQ,CAAT;AAAA;AAAA;AAAA;AAAA,kBADA;AAGH,SAJA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAxBD;;GAAMV,I;;KAAAA,I;AA0BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport '../App.css'\nimport {questionProps} from '../Types/types'\n\nconst Quiz: React.FC<questionProps> = ({question,answer,options,handleStep}) => {\n    let [score,setScore] = useState(0)\n    let setActive = (ans : string):void => {\n        if (answer===ans) {\n            setScore(++score)\n        }\n        handleStep(score);\n    }\n    return (\n        <div className='quiz-container'>\n            <div>\n                <h3> Q: {question}</h3>\n            </div>\n            <div>\n                <ul>\n                    {options.map((answer, i) => {\n                        return (\n                        <li key={i} value={answer} onClick={()=>setActive(answer)} className='option-list'>{answer}</li>\n                        )\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}