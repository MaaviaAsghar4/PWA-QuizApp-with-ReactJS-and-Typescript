{"ast":null,"code":"import _regeneratorRuntime from\"/home/maaviasghar4/Desktop/React-Bootcamp/quizapplicationpwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/maaviasghar4/Desktop/React-Bootcamp/quizapplicationpwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/maaviasghar4/Desktop/React-Bootcamp/quizapplicationpwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect,useState}from'react';import{getQuestions}from'./../Service/QuizApi';import'../App.css';import Quiz from'./Quix';import Result from'./Result';var Header=function Header(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),difficultyLevel=_useState2[0],setDifficultyLevel=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),totalQuestions=_useState4[0],setTotalQuestions=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),nextQuestion=_useState6[0],setNextQuestion=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),quizQues=_useState8[0],setQuizQuestions=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),count=_useState10[0],setCount=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showResult=_useState12[0],setResult=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),total=_useState14[0],setTotal=_useState14[1];var handleQuestions=function handleQuestions(e){setTotalQuestions(e.target.value);};var handleDifficulty=function handleDifficulty(e){setDifficultyLevel(e.target.value);};var fetchQuiz=function fetchQuiz(){setCount(true);};var handleStep=function handleStep(score){if(nextQuestion!==quizQues.length-1){setNextQuestion(function(prev){return prev+1;});}else if(nextQuestion===quizQues.length-1){setTotal(score);setResult(true);}};var handleNewGame=function handleNewGame(){setResult(false);setCount(false);};useEffect(function(){var fetchQuestions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var quizQues;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getQuestions(totalQuestions,difficultyLevel);case 2:quizQues=_context.sent;setQuizQuestions(quizQues);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchQuestions(){return _ref.apply(this,arguments);};}();fetchQuestions();},[totalQuestions,difficultyLevel,count]);if(showResult){return/*#__PURE__*/_jsx(Result,{totalScore:total,newGame:handleNewGame});}if(count){return/*#__PURE__*/_jsx(Quiz,{question:quizQues[nextQuestion].question,answer:quizQues[nextQuestion].answer,options:quizQues[nextQuestion].options,handleStep:handleStep});}return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Quiz Application\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Test Yourself\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"difficulty-select\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"difficulty-level\",children:\"Select a dificult level\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"difficulty-level\",required:true,onChange:handleDifficulty,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select difficulty\"}),/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"Easy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"Hard\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-select\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"questions\",children:\"Select number of Questions\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"questions\",required:true,onChange:handleQuestions,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select total\"}),/*#__PURE__*/_jsx(\"option\",{value:5,children:\"5\"}),/*#__PURE__*/_jsx(\"option\",{value:10,children:\"10\"}),/*#__PURE__*/_jsx(\"option\",{value:15,children:\"15\"})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:fetchQuiz,className:\"play\",children:\"Play\"})})]})]});};export default Header;","map":{"version":3,"sources":["/home/maaviasghar4/Desktop/React-Bootcamp/quizapplicationpwa/src/Components/Header.tsx"],"names":["React","useEffect","useState","getQuestions","Quiz","Result","Header","difficultyLevel","setDifficultyLevel","totalQuestions","setTotalQuestions","nextQuestion","setNextQuestion","quizQues","setQuizQuestions","count","setCount","showResult","setResult","total","setTotal","handleQuestions","e","target","value","handleDifficulty","fetchQuiz","handleStep","score","length","prev","handleNewGame","fetchQuestions","question","answer","options"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getQuestions } from './../Service/QuizApi'\nimport '../App.css'\nimport Quiz from './Quix'\nimport Result from './Result'\nimport { quizQuestions } from '../Types/types'\n\nconst Header: React.FC = () => {\n    const [difficultyLevel, setDifficultyLevel] = useState('')\n    const [totalQuestions, setTotalQuestions] = useState(0)\n    const [nextQuestion, setNextQuestion] = useState(0)\n    const [quizQues, setQuizQuestions] = useState<quizQuestions[]>([])\n    let [count, setCount] = useState(false)\n    let [showResult, setResult] = useState(false)\n    let [total, setTotal] = useState(0)\n\n    let handleQuestions = (e: any) => {\n        setTotalQuestions(e.target.value)\n    }\n\n    let handleDifficulty = (e: any) => {\n        setDifficultyLevel(e.target.value)\n    }\n\n    const fetchQuiz = () => {\n        setCount(true)\n    }\n\n    let handleStep = (score: number) => {\n        if (nextQuestion !== quizQues.length - 1) {\n            setNextQuestion(prev => prev + 1)\n        } else if (nextQuestion === quizQues.length - 1) {\n            setTotal(score)\n            setResult(true)\n        }\n    }\n\n    let handleNewGame = () => {\n        setResult(false)\n        setCount(false)\n    }\n\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            const quizQues: quizQuestions[] = await getQuestions(totalQuestions, difficultyLevel);\n            setQuizQuestions(quizQues)\n        }\n        fetchQuestions()\n    }, [totalQuestions, difficultyLevel, count])\n\n    if (showResult) {\n        return (\n            <Result\n                totalScore={total}\n                newGame={handleNewGame}\n            />\n        )\n    }\n\n    if (count) {\n        return (\n            <Quiz\n                question={quizQues[nextQuestion].question}\n                answer={quizQues[nextQuestion].answer}\n                options={quizQues[nextQuestion].options}\n                handleStep={handleStep}\n            />\n        )\n    }\n    return (\n        <div className='quiz-container'>\n            <h1 className='title'>Quiz Application</h1>\n            <div className='box'>\n                <h2>Test Yourself</h2>\n                <div className='difficulty-select'>\n                    <label htmlFor='difficulty-level'>Select a dificult level</label>\n                    <select name='difficulty-level' required={true} onChange={handleDifficulty}>\n                        <option value=''>Select difficulty</option>\n                        <option value='easy'>Easy</option>\n                        <option value='medium'>Medium</option>\n                        <option value='hard'>Hard</option>\n                    </select>\n                </div>\n                <div className='question-select'>\n                    <label htmlFor='questions'>Select number of Questions</label>\n                    <select name='questions' required={true} onChange={handleQuestions}>\n                        <option value=''>Select total</option>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                    </select>\n                </div>\n                <div>\n                    <button onClick={fetchQuiz} className='play'>Play</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}